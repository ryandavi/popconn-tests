
body#console {
	--background-color: rgb(0, 0, 0);
	--text-color: white;
	--accent-color: rgb(194, 194, 221);
	--border-radius: 4px;
	--user-color: var(--accent-color);
	--border-width: 2px;
	--line-height: 1.2; // line height has to be over 1

	--hover-color: var(--accent-color);
	--hover-background-color: rgba(255, 255, 255, 0.025); // #050505;

	--nav-height: 35px;

	background-color: var(--background-color);
	// font-family: monospace;
	color: var(--text-color);
	
	overflow: hidden;



	.mute-button {
		position: fixed;
		bottom: 0;
		right: 0;
		margin: 2vw;
		background-color: var(--background-color);
		color: var(--accent-color);
		border: var(--border-width) solid var(--accent-color);
		padding: 5px 10px;
		cursor: pointer;
		// font-family: monospace;
		font-size: 14px;
		border-radius: var(--border-radius);
		outline: var(--border-width) solid var(--background-color);
		text-transform: uppercase;

		&:hover {
			background-color: var(--accent-color);
			color: var(--background-color);
		}
	}


	* {
		/* hide scrollbar for firefox */
		scrollbar-width: none;
	}

	/* hide scroll bar for chrome and opera */
	::-webkit-scrollbar {
		display: none;
		width: 0px;
	}

	>nav {
		border-bottom: var(--border-width) solid var(--text-color);
		display: flex;
		align-items: center;
		justify-content: center;
		position: fixed;
		width: 100%;
		// background-color: var(--background-color);
		z-index: 1;
		top: 0;
		left: 0;

		height: var(--nav-height);

		display: none;

		h1 {
			font-size: .0001px;

			a {
				height: 100%;
				display: block;

				svg {
					height: var(--nav-height);
					padding: 10px;

					path {
						fill: var(--text-color);
						transition: all .2s;
					}

					&:hover {
						path {
							fill: var(--accent-color)
						}
					}
				}
			}

		}
	}

	.noise {
		display: none;
	}
	
	.overlay {
		display: none;
	}


	&.red-theme {
		--background-color: #200;
		--text-color: #F00;
		--accent-color: rgb(255, 94, 0);
	}

	&.blue-theme {
		--background-color: #001;
		--text-color: #0FF;
		--accent-color: rgb(0, 255, 191);
	}

	&.green-theme {
		--background-color: #000800;
		--text-color: #0F0;
		--accent-color: rgb(166, 255, 0);
	}


	&.effects-theme {
		input, & {
			text-shadow:
			0 0 1ex var(--text-color),
			0 0 2px rgba(255, 255, 255, 0.8);
		}
	
		.noise {
			pointer-events: none;
			position: absolute;
			display: block;
			width: 100%;
			height: 100%;
			background-image: url("https://media.giphy.com/media/oEI9uBYSzLpBK/giphy.gif");
			background-repeat: no-repeat;
			background-size: cover;
			z-index: -1;
			opacity: .005;
		}
	
		.overlay {
			pointer-events: none;
			display: block;
			position: absolute;
			width: 100%;
			height: 100%;
			background:
				repeating-linear-gradient(180deg,
					rgba(0, 0, 0, 0) 0,
					rgba(0, 0, 0, 0.3) 50%,
					rgba(0, 0, 0, 0) 100%);
			background-size: auto 4px;
			z-index: 1;
		}
	
		.overlay::before {
			content: "";
			pointer-events: none;
			position: absolute;
			display: block;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			width: 100%;
			height: 100%;
			opacity: .125;
			background-image: linear-gradient(0deg,
					transparent 0%,
					rgba(32, 128, 32, 0.2) 2%,
					rgba(32, 128, 32, 0.8) 3%,
					rgba(32, 128, 32, 0.2) 3%,
					transparent 100%);
			background-repeat: no-repeat;
			animation: scan 7.5s linear 0s infinite;
		}
	
		@keyframes scan {
			0% {
				background-position: 0 -100vh;
			}
	
			35%,
			100% {
				background-position: 0 100vh;
			}
		}
	}



	>.terminal {
		height: 100%;
		width: 100%;
		overflow-y: auto;
		padding: 7vw;

		padding-bottom: calc(7vw + var(--nav-height));
		box-sizing: border-box;
		font-size: clamp(14px, 1.75vw, 24px);
		line-height: var(--line-height);
		font-weight: bold;

		&.mask {
			mask-image: linear-gradient(180deg, transparent 0%, rgba(0, 0, 0, 1) 0%);
			mask-size: 100% 100%;
			mask-repeat: no-repeat;
			mask-position: 0 0;
		}

		>.output {
			user-select: none;
			user-drag: none;
			app-region: no-drag;
		}

		// fade out when you say bye
		&.complete {
			opacity: .33;

			.console-message {
				cursor: default;
			}
		}

		// hover state
		&:not(.complete) {
			.console-message {
				&:hover {
					background-color: var(--hover-background-color);
					// color: var(--hover-color);

					input.input {
						// color: var(--hover-color);
					}

					.new-cursor {
						background-color: var(--hover-color);
					}

					&.user {
						// color: var(--hover-color);
					}

					&.ascii {
						// color: var(--hover-color);
					}

					// for user input
					>.input-wrapper {
						>.new-cursor {
							background-color: var(--hover-color);
						}

						>input.input {
							// color: var(--hover-color);
						}
					}
				}
			}
		}

		.console-message {
			padding: 3px 6px;
			cursor: pointer;
			border-radius: var(--border-radius);
			transition: all .2s, text-shadow 3s;

			&.typing {
				text-shadow:
				0 0 1ex rgba(255, 255, 255, 0.514),
				0 0 2px rgba(255, 255, 255, 0.8);
			}

			&.user {
				color: var(--user-color);
			}

			&.system {
				// font-family: monospace;
				white-space: pre;
			}

			&.ascii {
				padding: 0 3px;
				// font-family: monospace;
				white-space: pre;
				// line-height: 1;
				color: var(--accent-color);

				>.new-cursor {
					background-color: var(--accent-color);
				}
			}

			>span.command-label {
				margin-right: .5em;
				white-space: nowrap;
				display: inline-flex;

			}

			.new-cursor {
				display: none;
				visibility: hidden;

				&.visible {
					display: inline-block;
					visibility: visible;
				}
			}
		}

		.new-cursor {
			display: inline-block;
			width: .5em;
			background-color: var(--text-color);
			animation: blink 0.7s infinite;
			position: relative;
			left: .15em;
			border-radius: var(--border-radius);
		}

		>.terminal-input {
			display: none;

			&.visible {
				display: block;

				&.focused {
					.console-message {
						background-color: var(--hover-background-color);
					}
				}
			}

			>label {
				display: flex;
				cursor: pointer;
				color: var(--user-color);

				>.input-wrapper {
					display: flex;
					min-width: 0;

					input.input {
						background-color: transparent;
						border: none;
						outline: none;
						color: var(--text-color);
						font-family: inherit;
						font-size: inherit;
						width: calc(100% - 20px);
						caret-color: transparent;
						width: fit-content;
						min-width: unset;
						// field-sizing: content;
						min-width: 0;
						padding: 0;
						margin: 0;
						color: var(--user-color);
						line-height: var(--line-height);
						font-weight: inherit;
						width: 0px;

						&::placeholder {
							font-style: italic;
							color: inherit;
							opacity: .5;
						}
					}

					.new-cursor {
						background-color: var(--user-color);
					}

					// hide cursor if not focused
					input.input:not(:focus)+.new-cursor {
						display: none;
						visibility: hidden;
					}
				}
			}
		}

		@keyframes blink {
			0% {
				opacity: 0;
			}

			50% {
				opacity: 1;
			}

			100% {
				opacity: 0;
			}
		}

	}
}

@media (max-width: 768px) {

	body {
		min-width: 320px;
	}

	body#console {
		>.terminal {
			// font-size: 4.25vw;
		}
	}
}

